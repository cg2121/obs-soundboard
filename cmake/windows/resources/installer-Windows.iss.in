#define MyAppName "@CMAKE_PROJECT_NAME@"
#define MyAppVersion "@CMAKE_PROJECT_VERSION@"
#define MyAppPublisher "@PLUGIN_AUTHOR@"
#define MyAppURL "@PLUGIN_WEBSITE@"
#define MyWindowsAppUUID "@WINDOWS_APPUUID@"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={#MyWindowsAppUUID}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={commonappdata}\obs-studio\plugins
DefaultGroupName={#MyAppName}
OutputBaseFilename={#MyAppName}-{#MyAppVersion}-Windows-Installer
Compression=lzma
SolidCompression=yes
DirExistsWarning=no

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "..\release\Package\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"

[Code]
// Helper script to find the OBS installation path
// credit where it's due :
// following function comes from https://github.com/Xaymar/obs-studio_amf-encoder-plugin/blob/master/%23Resources/Installer.in.iss#L45
// This is deprecated as it is not super reliable if portable installs are used. Replace with a more reliable method in the future.
function GetOBSDirName(Value: String): String;
var
  InstallPath: String;
begin
  // initialize default path, which will be returned when the following registry
  // key queries fail due to missing keys or for some different reason
  Result := '{autopf}\obs-studio';
  // query the first registry value; if this succeeds, return the obtained value
  if RegQueryStringValue(HKLM32, 'SOFTWARE\OBS Studio', '', InstallPath) then
    Result := InstallPath;
end;

// Pre-Post-Install actions
procedure CurStepChanged(CurStep: TSetupStep);
var
  ResultCode: Integer;
begin
  ResultCode := 0;

  // Post-install Steps
  if ( CurStep = ssPostInstall ) then
  begin
    if ( DelTree(ExpandConstant('{code:GetOBSDirName}\data\obs-plugins\{#MyAppName}'), True, True, True) ) then
      Log('Removed old {#MyAppName} plugin folder: ' + ExpandConstant('{code:GetOBSDirName}\data\obs-plugins\{#MyAppName}'));
    if ( DelTree(ExpandConstant('{code:GetOBSDirName}\obs-plugins\64bit\{#MyAppName}*'), False, True, True) ) then
      Log('Removed old {#MyAppName} plugin files: ' + ExpandConstant('{code:GetOBSDirName}\obs-plugins\64bit\{#MyAppName}*'));
  end;
end;
